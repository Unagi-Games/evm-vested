/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { AccessControlContract } from "./AccessControl";
import { ChampMarketplaceContract } from "./ChampMarketplace";
import { ChampTokenContract } from "./ChampToken";
import { ChildChampTokenContract } from "./ChildChampToken";
import { ChildMgcTokenContract } from "./ChildMgcToken";
import { DistributionManagerContract } from "./DistributionManager";
import { ERC165Contract } from "./ERC165";
import { IAccessControlContract } from "./IAccessControl";
import { IChildTokenContract } from "./IChildToken";
import { IERC165Contract } from "./IERC165";
import { IPaymentRelayV0Contract } from "./IPaymentRelayV0";
import { LockableContract } from "./Lockable";
import { LockedChampTokenContract } from "./LockedChampToken";
import { MgcTokenContract } from "./MgcToken";
import { MigrationsContract } from "./Migrations";
import { PaymentRelayContract } from "./PaymentRelay";
import { TestLockableContract } from "./TestLockable";
import { TestPaymentRelayV0Contract } from "./TestPaymentRelayV0";
import { TimelockContract } from "./Timelock";
import { TimelockControllerContract } from "./TimelockController";
import { UltimateChampionsNFTContract } from "./UltimateChampionsNFT";
import { UPaymentSplitterContract } from "./UPaymentSplitter";
import { VestingWalletMultiLinearContract } from "./VestingWalletMultiLinear";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "AccessControl"): AccessControlContract;
      require(name: "ChampMarketplace"): ChampMarketplaceContract;
      require(name: "ChampToken"): ChampTokenContract;
      require(name: "ChildChampToken"): ChildChampTokenContract;
      require(name: "ChildMgcToken"): ChildMgcTokenContract;
      require(name: "DistributionManager"): DistributionManagerContract;
      require(name: "ERC165"): ERC165Contract;
      require(name: "IAccessControl"): IAccessControlContract;
      require(name: "IChildToken"): IChildTokenContract;
      require(name: "IERC165"): IERC165Contract;
      require(name: "IPaymentRelay_V0"): IPaymentRelayV0Contract;
      require(name: "Lockable"): LockableContract;
      require(name: "LockedChampToken"): LockedChampTokenContract;
      require(name: "MgcToken"): MgcTokenContract;
      require(name: "Migrations"): MigrationsContract;
      require(name: "PaymentRelay"): PaymentRelayContract;
      require(name: "TestLockable"): TestLockableContract;
      require(name: "TestPaymentRelay_V0"): TestPaymentRelayV0Contract;
      require(name: "Timelock"): TimelockContract;
      require(name: "TimelockController"): TimelockControllerContract;
      require(name: "UltimateChampionsNFT"): UltimateChampionsNFTContract;
      require(name: "UPaymentSplitter"): UPaymentSplitterContract;
      require(
        name: "VestingWalletMultiLinear"
      ): VestingWalletMultiLinearContract;
    }
  }
}

export { AccessControlContract, AccessControlInstance } from "./AccessControl";
export {
  ChampMarketplaceContract,
  ChampMarketplaceInstance,
} from "./ChampMarketplace";
export { ChampTokenContract, ChampTokenInstance } from "./ChampToken";
export {
  ChildChampTokenContract,
  ChildChampTokenInstance,
} from "./ChildChampToken";
export { ChildMgcTokenContract, ChildMgcTokenInstance } from "./ChildMgcToken";
export {
  DistributionManagerContract,
  DistributionManagerInstance,
} from "./DistributionManager";
export { ERC165Contract, ERC165Instance } from "./ERC165";
export {
  IAccessControlContract,
  IAccessControlInstance,
} from "./IAccessControl";
export { IChildTokenContract, IChildTokenInstance } from "./IChildToken";
export { IERC165Contract, IERC165Instance } from "./IERC165";
export {
  IPaymentRelayV0Contract,
  IPaymentRelayV0Instance,
} from "./IPaymentRelayV0";
export { LockableContract, LockableInstance } from "./Lockable";
export {
  LockedChampTokenContract,
  LockedChampTokenInstance,
} from "./LockedChampToken";
export { MgcTokenContract, MgcTokenInstance } from "./MgcToken";
export { MigrationsContract, MigrationsInstance } from "./Migrations";
export { PaymentRelayContract, PaymentRelayInstance } from "./PaymentRelay";
export { TestLockableContract, TestLockableInstance } from "./TestLockable";
export {
  TestPaymentRelayV0Contract,
  TestPaymentRelayV0Instance,
} from "./TestPaymentRelayV0";
export { TimelockContract, TimelockInstance } from "./Timelock";
export {
  TimelockControllerContract,
  TimelockControllerInstance,
} from "./TimelockController";
export {
  UltimateChampionsNFTContract,
  UltimateChampionsNFTInstance,
} from "./UltimateChampionsNFT";
export {
  UPaymentSplitterContract,
  UPaymentSplitterInstance,
} from "./UPaymentSplitter";
export {
  VestingWalletMultiLinearContract,
  VestingWalletMultiLinearInstance,
} from "./VestingWalletMultiLinear";
